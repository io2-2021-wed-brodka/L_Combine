name: CI Action

on: pull_request

jobs:
  buidbackend:
    name: Build .NET Backend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '2.1.x' ]

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build .NET
      run: dotnet build --no-restore
    - name: Test .NET
      run: dotnet test --no-build --verbosity normal

  buildfrontend:
    name: Build Angular Frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ '12.x' ]
        build-dir: ['Frontend/Admin', 'Frontend/UserTech']
      fail-fast: false
    defaults:
      run:
        working-directory: ./${{ matrix.build-dir }}

    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install packages
        run: npm ci
      - name: Buid Angular
        run: npm run build
      - name: Test Angular
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

  postman-test:
    name: Backend Postman tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '2.1.x' ]
        node-version: [ '12.x' ]

    steps:
    - uses: actions/checkout@v2
    - name: Build the docker-compose stack
      run: docker-compose up -d
    - name: Setup .NET
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Setup .NET EF
      run: |
        dotnet tool install --global --version 2.1 dotnet-ef
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Setup Newman
      run: npm install -g newman
    - name: Build Backend
      run: dotnet build
    - name: Wait for containers
      uses: jakejarvis/wait-action@master
      with:
        time: '20s'
    - name: Check running containers
      run: docker ps -a
    - name: Run Postman tests 
      run: ./scripts/run_test.sh Tests/PostmanTests/ Backend/BackendAPI/

  testFrontendE2E:
    name: Frontend E2E tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ '12.x' ]
        build-dir: ['Frontend/Admin', 'Frontend/UserTech']
      fail-fast: false
    defaults:
      run:
        working-directory: ./${{ matrix.build-dir }}

    steps:
      - uses: actions/checkout@v2
      - name: Build the docker-compose stack
        run: docker-compose up -d
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install packages
        run: npm ci
      - name: Buid Angular
        run: npm run build
      - name: Test E2E
        run: npm run e2e -- --protractor-config=e2e/protractor-ci.conf.js --webdriver-update=false
