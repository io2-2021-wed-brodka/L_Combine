name: CI Action

on: [push, pull_request]

jobs:
  buidbackend:
    name: Build .NET Backend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '2.1.x' ]

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build .NET
      run: dotnet build --no-restore
    - name: Test .NET
      run: dotnet test --no-build --verbosity normal
  
  buildfrontend:
    name: Build Angular Frontend
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        node-version: [ '12.x' ]
        build-dir: ['Frontend/Admin', 'Frontend/UserTech']
    defaults: 
      run: 
        working-directory: ./${{ matrix.build-dir }}

    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Setup Node 
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install NPM
        run: npm install
      - name: Buid NPM
        run: npm run build

  test-api: 
    runs-on: ubuntu-latest
    steps: 
     - uses: actions/checkout@v2
     - name: Install Node
       uses: actions/setup-node@v1
       with: 
        node-version: '12.x'
     - name: Install newman
       run: |
        npm install -g newman
     - name: Make Directory for results
       run: mkdir -p testResults
     - name: Run POSTMAN collection
       run: |
        newman run ./PostmanTests/Bikes.postman_collection.json   > testResults/runreport1.html
     - name: Output the run Details
       uses: actions/upload-artifact@v2
       with: 
        name: RunReports
        path: testResults
