{
	"info": {
		"_postman_id": "e4bff08c-4000-4196-93e0-a51af42a033d",
		"name": "TestingCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct role\",function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"Token\", jsonData.token);\r",
									"    pm.expect(jsonData.role).to.eql(\"admin\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"admin\",\r\n    \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}login",
							"host": [
								"{{URL}}login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BikesReserved",
			"item": [
				{
					"name": "GetEmpty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}bikes/reserved",
							"host": [
								"{{URL}}bikes"
							],
							"path": [
								"reserved"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteNothing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\",function(){\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Error message correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Bike is not reserved\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}bikes/reserved/2",
							"host": [
								"{{URL}}bikes"
							],
							"path": [
								"reserved",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reserve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct station ID\",function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.station.id).to.eql(\"1\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}bikes/reserved",
							"host": [
								"{{URL}}bikes"
							],
							"path": [
								"reserved"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAfterAdd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes.length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}bikes/reserved",
							"host": [
								"{{URL}}bikes"
							],
							"path": [
								"reserved"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteReservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\",function(){\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}bikes/reserved/2",
							"host": [
								"{{URL}}bikes"
							],
							"path": [
								"reserved",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAfterDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}bikes/reserved",
							"host": [
								"{{URL}}bikes"
							],
							"path": [
								"reserved"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Bikes",
			"item": [
				{
					"name": "RentedGetEmpty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}Bikes/rented",
							"host": [
								"{{URL}}Bikes"
							],
							"path": [
								"rented"
							]
						}
					},
					"response": []
				},
				{
					"name": "RentedPost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"rented\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}Bikes/rented",
							"host": [
								"{{URL}}Bikes"
							],
							"path": [
								"rented"
							]
						}
					},
					"response": []
				},
				{
					"name": "RentedGetAfterRent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct ID \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes[0].id).to.eql(\"3\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes.length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}Bikes/rented",
							"host": [
								"{{URL}}Bikes"
							],
							"path": [
								"rented"
							]
						}
					},
					"response": []
				},
				{
					"name": "RentedPostTryRentAgain",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\",function(){\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Bike already rented\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}Bikes/rented",
							"host": [
								"{{URL}}Bikes"
							],
							"path": [
								"rented"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteReservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"available\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}Stations/1/bikes",
							"host": [
								"{{URL}}Stations"
							],
							"path": [
								"1",
								"bikes"
							]
						}
					},
					"response": []
				},
				{
					"name": "RentedGetAfterDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}Bikes/rented",
							"host": [
								"{{URL}}Bikes"
							],
							"path": [
								"rented"
							]
						}
					},
					"response": []
				},
				{
					"name": "BikesGetBikes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes.length).to.eql(8);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes[0].id).to.eql(\"1\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}bikes",
							"host": [
								"{{URL}}bikes"
							]
						}
					},
					"response": []
				},
				{
					"name": "BikesAddBike",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"NewBikeID\", jsonData.id);\r",
									"    pm.expect(jsonData.status).to.eql(\"available\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct station ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.station.id).to.eql(\"1\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"StationId\":\"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}bikes",
							"host": [
								"{{URL}}bikes"
							]
						}
					},
					"response": []
				},
				{
					"name": "BikesGetBikesAfterAdd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes.length).to.eql(9);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes[0].id).to.eql(\"1\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}bikes",
							"host": [
								"{{URL}}bikes"
							]
						}
					},
					"response": []
				},
				{
					"name": "BikesBlockedPost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"blocked\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct station ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.station.id).to.eql(\"1\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{NewBikeID}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}bikes/blocked",
							"host": [
								"{{URL}}bikes"
							],
							"path": [
								"blocked"
							]
						}
					},
					"response": []
				},
				{
					"name": "BikesBlockedDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\",function(){\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}bikes/blocked/{{NewBikeID}}",
							"host": [
								"{{URL}}bikes"
							],
							"path": [
								"blocked",
								"{{NewBikeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "BikesBlockedPostAgain",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"blocked\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct station ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.station.id).to.eql(\"1\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{NewBikeID}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}bikes/blocked",
							"host": [
								"{{URL}}bikes"
							],
							"path": [
								"blocked"
							]
						}
					},
					"response": []
				},
				{
					"name": "BikesDeleteBike",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\",function(){\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}bikes/{{NewBikeID}}",
							"host": [
								"{{URL}}bikes"
							],
							"path": [
								"{{NewBikeID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "BikesGetBikesAfterDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes.length).to.eql(8);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes[0].id).to.eql(\"1\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}bikes",
							"host": [
								"{{URL}}bikes"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Stations",
			"item": [
				{
					"name": "StationsGetAllStations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct ID 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stations[0].id).to.eql(\"1\");\r",
									"});\r",
									"pm.test(\"Correct ID 2\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stations[1].id).to.eql(\"2\");\r",
									"});\r",
									"pm.test(\"Correct ID 3\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stations[2].id).to.eql(\"3\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stations[0].name).to.eql(\"Warszawa Targowa\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct stations count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stations.length).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}Stations",
							"host": [
								"{{URL}}Stations"
							]
						}
					},
					"response": []
				},
				{
					"name": "StationsGet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Warszawa Targowa\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}Stations/1",
							"host": [
								"{{URL}}Stations"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "StationsGetBikes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct ID 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes[0].id).to.eql(\"1\");\r",
									"});\r",
									"pm.test(\"Correct ID 2\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes[1].id).to.eql(\"2\");\r",
									"});\r",
									"pm.test(\"Correct ID 3\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes[2].id).to.eql(\"3\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes[0].status).to.eql(\"blocked\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes[0].user).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bikes count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.bikes.length).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}stations/1/bikes",
							"host": [
								"{{URL}}stations"
							],
							"path": [
								"1",
								"bikes"
							]
						}
					},
					"response": []
				},
				{
					"name": "StationsReturnBikeNoReservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\",function(){\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Bike is not rented by specific user\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}stations/2/bikes",
							"host": [
								"{{URL}}stations"
							],
							"path": [
								"2",
								"bikes"
							]
						}
					},
					"response": []
				},
				{
					"name": "RentedPost2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"rented\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct station\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"rented\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}Bikes/rented",
							"host": [
								"{{URL}}Bikes"
							],
							"path": [
								"rented"
							]
						}
					},
					"response": []
				},
				{
					"name": "StationsReturnBike",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct station ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.station.id).to.eql(\"2\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct bike status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"available\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}stations/2/bikes",
							"host": [
								"{{URL}}stations"
							],
							"path": [
								"2",
								"bikes"
							]
						}
					},
					"response": []
				},
				{
					"name": "StationsAddStation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct station status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"NewStationID\", jsonData.id);\r",
									"    pm.expect(jsonData.status).to.eql(\"active\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"temporary\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}stations",
							"host": [
								"{{URL}}stations"
							]
						}
					},
					"response": []
				},
				{
					"name": "StationsBlockStation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct station name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"temporary\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct station status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"blocked\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":{{NewStationID}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}stations/blocked",
							"host": [
								"{{URL}}stations"
							],
							"path": [
								"blocked"
							]
						}
					},
					"response": []
				},
				{
					"name": "StationsGetBlockedStations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct station count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stations.length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}stations/blocked",
							"host": [
								"{{URL}}stations"
							],
							"path": [
								"blocked"
							]
						}
					},
					"response": []
				},
				{
					"name": "StationsUnblockStation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\",function(){\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}stations/blocked/{{NewStationID}}",
							"host": [
								"{{URL}}stations"
							],
							"path": [
								"blocked",
								"{{NewStationID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "StationsDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\",function(){\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}stations/{{NewStationID}}",
							"host": [
								"{{URL}}stations"
							],
							"path": [
								"{{NewStationID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "StationsGetActiveStation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Correct ID 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stations[0].id).to.eql(\"1\");\r",
									"});\r",
									"pm.test(\"Correct ID 2\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stations[1].id).to.eql(\"2\");\r",
									"});\r",
									"pm.test(\"Correct ID 3\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stations[2].id).to.eql(\"3\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stations[0].name).to.eql(\"Warszawa Targowa\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct stations count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stations.length).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}stations/active",
							"host": [
								"{{URL}}stations"
							],
							"path": [
								"active"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "RegisterTestUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"Jan\",\n    \"password\": \"Dzban\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}register",
							"host": [
								"{{URL}}register"
							]
						}
					},
					"response": []
				},
				{
					"name": "UsersGetAllUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//To nie ma sensu przy wielokrotnym uruchomieniu testu\r",
									"/*pm.test(\"Correct ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.users[0].id).to.eql(\"2\");\r",
									"});*/\r",
									"\r",
									"pm.test(\"Correct user count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.users.length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}users",
							"host": [
								"{{URL}}users"
							]
						}
					},
					"response": []
				},
				{
					"name": "UsersGetBlockedUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct blocked user count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.users.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}users/blocked",
							"host": [
								"{{URL}}users"
							],
							"path": [
								"blocked"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Techs",
			"item": [
				{
					"name": "TechsGetEmpty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct tech count\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.techs.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}techs",
							"host": [
								"{{URL}}techs"
							]
						}
					},
					"response": []
				},
				{
					"name": "TechsAddTech",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"NewTechID\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"techName\",\r\n    \"password\":\"techPass\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}techs",
							"host": [
								"{{URL}}techs"
							]
						}
					},
					"response": []
				},
				{
					"name": "TechsGetTech",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct tech id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"NewTechID\"));\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}techs/{{NewTechID}}",
							"host": [
								"{{URL}}techs"
							],
							"path": [
								"{{NewTechID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "TechsDeleteTech",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\",function(){\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}techs/{{NewTechID}}",
							"host": [
								"{{URL}}techs"
							],
							"path": [
								"{{NewTechID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "TechsDeleteTechAgain",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\",function(){\r",
									"    pm.response.to.have.status(404);\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}techs/{{NewTechID}}",
							"host": [
								"{{URL}}techs"
							],
							"path": [
								"{{NewTechID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Logout",
			"item": [
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\",function(){\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}logout",
							"host": [
								"{{URL}}logout"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{Token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "http://localhost:8080/"
		},
		{
			"key": "Token",
			"value": "x"
		},
		{
			"key": "NewStationID",
			"value": "-1"
		},
		{
			"key": "NewBikeID",
			"value": "-1"
		},
		{
			"key": "NewTechID",
			"value": "-1"
		}
	]
}