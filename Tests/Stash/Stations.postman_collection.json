{
	"info": {
		"_postman_id": "f09e2463-7a7d-4a6a-8e6b-dc922ff2ca1e",
		"name": "Stations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "StationsGet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct IDs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.stations[0].id).to.eql(\"1\");\r",
							"    pm.expect(jsonData.stations[1].id).to.eql(\"2\");\r",
							"    pm.expect(jsonData.stations[2].id).to.eql(\"3\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/api/stations",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"stations"
					]
				}
			},
			"response": []
		},
		{
			"name": "StationsGetId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct station name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Warszawa Targowa\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/api/stations/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"stations",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "StationsBikesGetId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct bikes at station 1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.bikes[0].id).to.eql(\"4\");\r",
							"    pm.expect(jsonData.bikes[1].id).to.eql(\"5\");\r",
							"    pm.expect(jsonData.bikes[2].id).to.eql(\"7\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/api/stations/bikes/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"stations",
						"bikes",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "StationsBikesPost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\",function(){\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"     pm.expect(jsonData.message).to.eql(\"Cannot associate specified bike with specified station\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":\"4\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/api/stations/bikes/1\n",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"stations",
						"bikes",
						"1\n"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI1IiwibmJmIjoxNjE4MzM4Mzk4LCJleHAiOjE2MTg5NDMxOTgsImlhdCI6MTYxODMzODM5OH0.EZOKNLPHuVKUuA79TGXBR8IMb_YYNGUUbdTSlAYX-yU",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}