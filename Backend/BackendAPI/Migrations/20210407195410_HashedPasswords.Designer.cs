// <auto-generated />
using System;
using BackendAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackendAPI.Migrations
{
    [DbContext(typeof(ProductionDataContext))]
    [Migration("20210407195410_HashedPasswords")]
    partial class HashedPasswords
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackendAPI.Models.Bike", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BikeStationID");

                    b.Property<int>("State");

                    b.HasKey("ID");

                    b.HasIndex("BikeStationID");

                    b.ToTable("Bikes");

                    b.HasData(
                        new { ID = 1, BikeStationID = 3, State = 0 },
                        new { ID = 2, BikeStationID = 3, State = 0 },
                        new { ID = 3, BikeStationID = 3, State = 1 },
                        new { ID = 4, BikeStationID = 1, State = 0 },
                        new { ID = 5, BikeStationID = 1, State = 0 },
                        new { ID = 6, BikeStationID = 4, State = 0 },
                        new { ID = 7, BikeStationID = 1, State = 0 }
                    );
                });

            modelBuilder.Entity("BackendAPI.Models.BikeStation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("State");

                    b.HasKey("ID");

                    b.ToTable("BikeStations");

                    b.HasData(
                        new { ID = 1, LocationName = "Warszawa Targowa", State = 0 },
                        new { ID = 2, LocationName = "Warszawa Aleje Jerozolimskie", State = 0 },
                        new { ID = 3, LocationName = "Warszawa PKiN", State = 0 },
                        new { ID = 4, LocationName = "Warszawa Politechnika", State = 1 }
                    );
                });

            modelBuilder.Entity("BackendAPI.Models.Rental", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BikeID");

                    b.Property<DateTime?>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("BikeID");

                    b.HasIndex("UserID");

                    b.ToTable("Rentals");

                    b.HasData(
                        new { ID = 1, BikeID = 1, EndDate = new DateTime(2021, 2, 20, 2, 10, 15, 0, DateTimeKind.Unspecified), StartDate = new DateTime(2021, 2, 20, 2, 0, 0, 0, DateTimeKind.Unspecified), UserID = 1 },
                        new { ID = 2, BikeID = 1, EndDate = new DateTime(2021, 2, 20, 3, 15, 15, 0, DateTimeKind.Unspecified), StartDate = new DateTime(2021, 2, 20, 3, 0, 0, 0, DateTimeKind.Unspecified), UserID = 1 },
                        new { ID = 3, BikeID = 2, EndDate = new DateTime(2021, 3, 15, 12, 28, 0, 0, DateTimeKind.Unspecified), StartDate = new DateTime(2021, 3, 15, 12, 0, 0, 0, DateTimeKind.Unspecified), UserID = 2 },
                        new { ID = 4, BikeID = 3, EndDate = new DateTime(2021, 3, 18, 21, 39, 18, 0, DateTimeKind.Unspecified), StartDate = new DateTime(2021, 3, 18, 21, 20, 12, 0, DateTimeKind.Unspecified), UserID = 3 },
                        new { ID = 5, BikeID = 2, EndDate = new DateTime(2021, 3, 20, 13, 0, 56, 0, DateTimeKind.Unspecified), StartDate = new DateTime(2021, 3, 20, 12, 40, 34, 0, DateTimeKind.Unspecified), UserID = 3 }
                    );
                });

            modelBuilder.Entity("BackendAPI.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("ID");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new { ID = 1, LastName = "NazwiskoTestowe", Login = "login1", Name = "ImieTestowe", PasswordHash = "e6c3da5b206634d7f3f3586d747ffdb36b5c675757b380c6a5fe5c570c714349" },
                        new { ID = 2, LastName = "Nazwisko2", Login = "login2", Name = "Imie2", PasswordHash = "1ba3d16e9881959f8c9a9762854f72c6e6321cdd44358a10a4e939033117eab9" },
                        new { ID = 3, LastName = "Brzęczeszykiewicz", Login = "login3", Name = "Grzegorz", PasswordHash = "3acb59306ef6e660cf832d1d34c4fba3d88d616f0bb5c2a9e0f82d18ef6fc167" },
                        new { ID = 4, LastName = "Nazwisko3", Login = "login4", Name = "Imie3", PasswordHash = "a417b5dc3d06d15d91c6687e27fc1705ebc56b3b2d813abe03066e5643fe4e74" }
                    );
                });

            modelBuilder.Entity("BackendAPI.Models.Bike", b =>
                {
                    b.HasOne("BackendAPI.Models.BikeStation", "BikeStation")
                        .WithMany("Bikes")
                        .HasForeignKey("BikeStationID");
                });

            modelBuilder.Entity("BackendAPI.Models.Rental", b =>
                {
                    b.HasOne("BackendAPI.Models.Bike", "Bike")
                        .WithMany("Rentals")
                        .HasForeignKey("BikeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BackendAPI.Models.User", "User")
                        .WithMany("Rentals")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
